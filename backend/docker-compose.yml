version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management # Includes the RabbitMQ Management Plugin
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Port for RabbitMQ client connections
      - "15672:15672"  # Port for RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest # Default username
      RABBITMQ_DEFAULT_PASS: guest # Default password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Persistent data storage
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  api_gateway:
    build: ./api_gateway
    ports:
      - "5000:5000"
    env_file: ./api_gateway/.env
    environment:
      - AUTH_SERVICE_URL=http://authentication:5000
      - EMAIL_SERVICE_URL=http://email_service:5000
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy

  authentication:
    build: ./authentication
    ports:
      - "5001:5000"
    env_file: ./authentication/.env
    environment:
      - DB_HOST=authentication_db
      - PORT=5000
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      authentication_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  authentication_db:
    build: ./authentication/database
    ports:
      - "3306"
    env_file: ./authentication/database/.env
    # volumes:
      # - authentication_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  email_service:
    build: ./email_service
    ports:
      - "5002:5000"
    env_file: ./email_service/.env
    environment:
      - DB_HOST=email_db
      - PORT=5000
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      email_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  email_db:
    build: ./email_service/database
    ports:
      - "3306"
    env_file: ./email_service/database/.env
    # volumes:
      # - email_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  rabbitmq_data:
  # authentication_data:
  # email_data: